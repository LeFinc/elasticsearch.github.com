---
layout: guide
title: Cluster Update Settings API
cat: guide
sidebar: reference_api
---

p. Allows to update cluster wide specific settings. Settings updated can either be persistent (applied cross restarts) or transient (will not survive a full cluster restart). Here is an example:


<pre class="prettyprint">
curl -XPUT localhost:9200/_cluster/settings -d '{
    "persistent" : {
        "discovery.zen.minimum_master_nodes" : 2
    }
}'
</pre>

p. Or:

<pre class="prettyprint">
curl -XPUT localhost:9200/_cluster/settings -d '{
    "transient" : {
        "discovery.zen.minimum_master_nodes" : 2
    }
}'
</pre>

p. The cluster responds with the settings updated. So the response for the last example will be:

<pre class="prettyprint">
{
    "persistent" : {},
    "transient" : {
        "discovery.zen.minimum_master_nodes" : "2"
    }
}
</pre>

p. Cluster wide settings can be returned using:

<pre class="prettyprint">
curl -XGET localhost:9200/_cluster/settings
</pre>

There is a specific list of settings that can be updated, those include:

h1. Cluster settings

h2. Routing allocation

h3. Awareness

* @cluster.routing.allocation.awareness.attributes@: See "cluster documentation":/guide/reference/modules/cluster/.
* @cluster.routing.allocation.awareness.force.*@: See "cluster documentation":/guide/reference/modules/cluster/.

h3. Balanced Shards

* @cluster.routing.allocation.balance.shard@: defines the weight factor for shards allocated on a node (float). Defaults to @1.0f@.
* @cluster.routing.allocation.balance.index@: defines a factor to the number of shards per index allocated on a specific node (float). Defaults to @0.5f@.
* @cluster.routing.allocation.balance.primary@: defines a weight factor for the number of primaries of a specific index allocated on a node (float). @0.45f@.
* @cluster.routing.allocation.balance.threshold@: minimal optimization value of operations that should be performed (non negative float). Defaults to @0.05f@.

h3. Concurrent Rebalance

* @cluster.routing.allocation.cluster_concurrent_rebalance@: Allow to control how many concurrent rebalancing of shards are allowed cluster wide, and default it to @2@ (integer). @-1@ for unlimited. See also "cluster documentation":/guide/reference/modules/cluster/.

h3. Disable allocation

* @cluster.routing.allocation.disable_allocation@: See "cluster documentation":/guide/reference/modules/cluster/.
* @cluster.routing.allocation.disable_replica_allocation@: See "cluster documentation":/guide/reference/modules/cluster/.
* @cluster.routing.allocation.disable_new_allocation@: See "cluster documentation":/guide/reference/modules/cluster/.

h3. Throttling allocation

* @cluster.routing.allocation.node_initial_primaries_recoveries@: See "cluster documentation":/guide/reference/modules/cluster/.
* @cluster.routing.allocation.node_concurrent_recoveries@: See "cluster documentation":/guide/reference/modules/cluster/.

h3. Filter allocation

* @cluster.routing.allocation.include.*@: See "shard allocation filtering":/guide/reference/modules/cluster/.
* @cluster.routing.allocation.exclude.*@: See "shard allocation filtering":/guide/reference/modules/cluster/.
* @cluster.routing.allocation.require.*@ (from 0.90): See "shard allocation filtering":/guide/reference/modules/cluster/.

h2. Metadata

* @cluster.blocks.read_only@: Have the whole cluster read only (indices do not accept write operations), metadata is not allowed to be modified (create or delete indices).

h2. Discovery

* @discovery.zen.minimum_master_nodes@: See "master election":/guide/reference/modules/discovery/zen/

h2. Threadpools

* @threadpool.*@: See "threadpools":/guide/reference/modules/threadpool/


h1. Index settings

h2. Index filter cache

* @indices.cache.filter.size@: See "index filter cache":/guide/reference/index-modules/cache/
* @indices.cache.filter.expire@ (time): See "index filter cache":/guide/reference/index-modules/cache/

h2. TTL interval

* @indices.ttl.interval@ (time): See "note on documents expiration":http://www.elasticsearch.org/guide/reference/mapping/ttl-field/

h2. Recovery

* @indices.recovery.concurrent_streams@: See "indices":/guide/reference/modules/indices/
* @indices.recovery.file_chunk_size@: See "indices":/guide/reference/modules/indices/
* @indices.recovery.translog_ops@: See "indices":/guide/reference/modules/indices/
* @indices.recovery.translog_size@: See "indices":/guide/reference/modules/indices/
* @indices.recovery.compress@: See "indices":/guide/reference/modules/indices/
* @indices.recovery.max_bytes_per_sec@ (since 0.90.1, bytes size): See "indices":/guide/reference/modules/indices/
* @indices.recovery.max_size_per_sec@ (deprecated in 0.90.1, bytes size): See "indices":/guide/reference/modules/indices/

h2. Store level throttling

* @indices.store.throttle.type@: See "store level throttling documentation":/guide/reference/index-modules/store/
* @indices.store.throttle.max_bytes_per_sec@: See "store level throttling documentation":/guide/reference/index-modules/store/


h1. Logger

p. Logger values can also be updated by setting @logger.@ prefix. More settings will be allowed to be updated.


